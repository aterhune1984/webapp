name: Deploy to EKS

on:
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: us-west-2
  ECR_REPO_URL: ${{ secrets.ECR_REPO_URL }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          echo ${{ secrets.AWS_ECR_LOGIN }} | base64 --decode | docker login -u AWS --password-stdin $ECR_REPO_URL

      - name: Build and push Docker image
        id: build-image
        env:
          ECR_REPO_URL: ${{ env.ECR_REPO_URL }}
        run: |
          docker build -t $ECR_REPO_URL/my-python-app:$GITHUB_SHA .
          docker push $ECR_REPO_URL/my-python-app:$GITHUB_SHA
          echo "::set-output name=image-url::$ECR_REPO_URL/my-python-app:$GITHUB_SHA"

      - name: Deploy to EKS
        env:
          ECR_REPO_URL: ${{ env.ECR_REPO_URL }}
          EKS_CLUSTER_NAME: ${{ env.EKS_CLUSTER_NAME }}
          IMAGE_URL: ${{ steps.build-image.outputs.image-url }}
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
          kubectl set image deployment/my-python-app my-python-app=$IMAGE_URL --record
